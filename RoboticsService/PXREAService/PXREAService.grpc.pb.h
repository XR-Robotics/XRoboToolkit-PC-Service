// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: PXREAService.proto
#ifndef GRPC_PXREAService_2eproto__INCLUDED
#define GRPC_PXREAService_2eproto__INCLUDED

#include "PXREAService.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace PXREAService {

class EAService final {
 public:
  static constexpr char const* service_full_name() {
    return "PXREAService.EAService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendBytesToDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendBytesToDeviceRaw(context, request, cq));
    }
    virtual ::grpc::Status SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendBytesToRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendBytesToRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::PXREAService::ServerFeedback>> WatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::PXREAService::ServerFeedback>>(WatchServerFeedbackRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>> AsyncWatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>>(AsyncWatchServerFeedbackRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>> PrepareAsyncWatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>>(PrepareAsyncWatchServerFeedbackRaw(context, request, cq));
    }
    virtual ::grpc::Status CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncCancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncCancelServerFeedbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncCancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncCancelServerFeedbackRaw(context, request, cq));
    }
    virtual ::grpc::Status SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendBeatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendBeatRaw(context, request, cq));
    }
    virtual ::grpc::Status DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeviceControlJsonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeviceControlJsonRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void WatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::grpc::ClientReadReactor< ::PXREAService::ServerFeedback>* reactor) = 0;
      virtual void CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendBytesToDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendBytesToDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendBytesToRoomRaw(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendBytesToRoomRaw(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::PXREAService::ServerFeedback>* WatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>* AsyncWatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>* PrepareAsyncWatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncCancelServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncCancelServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendBeatRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendBeatRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeviceControlJsonRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeviceControlJsonRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendBytesToDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendBytesToDeviceRaw(context, request, cq));
    }
    ::grpc::Status SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendBytesToRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendBytesToRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::PXREAService::ServerFeedback>> WatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::PXREAService::ServerFeedback>>(WatchServerFeedbackRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>> AsyncWatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>>(AsyncWatchServerFeedbackRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>> PrepareAsyncWatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>>(PrepareAsyncWatchServerFeedbackRaw(context, request, cq));
    }
    ::grpc::Status CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncCancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncCancelServerFeedbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncCancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncCancelServerFeedbackRaw(context, request, cq));
    }
    ::grpc::Status SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendBeatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendBeatRaw(context, request, cq));
    }
    ::grpc::Status DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeviceControlJsonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeviceControlJsonRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void WatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::grpc::ClientReadReactor< ::PXREAService::ServerFeedback>* reactor) override;
      void CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendBytesToDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendBytesToDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendBytesToRoomRaw(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendBytesToRoomRaw(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::PXREAService::ServerFeedback>* WatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request) override;
    ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>* AsyncWatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>* PrepareAsyncWatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncCancelServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncCancelServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendBeatRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendBeatRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeviceControlJsonRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeviceControlJsonRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SendBytesToDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_SendBytesToRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_WatchServerFeedback_;
    const ::grpc::internal::RpcMethod rpcmethod_CancelServerFeedback_;
    const ::grpc::internal::RpcMethod rpcmethod_SendBeat_;
    const ::grpc::internal::RpcMethod rpcmethod_DeviceControlJson_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status SendBytesToDevice(::grpc::ServerContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SendBytesToRoom(::grpc::ServerContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status WatchServerFeedback(::grpc::ServerContext* context, const ::PXREAService::VRPid* request, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* writer);
    virtual ::grpc::Status CancelServerFeedback(::grpc::ServerContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SendBeat(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status DeviceControlJson(::grpc::ServerContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBytesToDevice(::grpc::ServerContext* context, ::PXREAService::DeviceBytesInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBytesToRoom(::grpc::ServerContext* context, ::PXREAService::RoomBytesInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchServerFeedback(::grpc::ServerContext* context, ::PXREAService::VRPid* request, ::grpc::ServerAsyncWriter< ::PXREAService::ServerFeedback>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCancelServerFeedback(::grpc::ServerContext* context, ::PXREAService::VRPid* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendBeat() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBeat(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeviceControlJson(::grpc::ServerContext* context, ::PXREAService::DeviceControlParameterJson* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SendBytesToDevice<WithAsyncMethod_SendBytesToRoom<WithAsyncMethod_WatchServerFeedback<WithAsyncMethod_CancelServerFeedback<WithAsyncMethod_SendBeat<WithAsyncMethod_DeviceControlJson<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceBytesInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response) { return this->SendBytesToDevice(context, request, response); }));}
    void SetMessageAllocatorFor_SendBytesToDevice(
        ::grpc::MessageAllocator< ::PXREAService::DeviceBytesInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceBytesInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBytesToDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::RoomBytesInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response) { return this->SendBytesToRoom(context, request, response); }));}
    void SetMessageAllocatorFor_SendBytesToRoom(
        ::grpc::MessageAllocator< ::PXREAService::RoomBytesInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::RoomBytesInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBytesToRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::PXREAService::VRPid, ::PXREAService::ServerFeedback>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::VRPid* request) { return this->WatchServerFeedback(context, request); }));
    }
    ~WithCallbackMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::PXREAService::ServerFeedback>* WatchServerFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::VRPid, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response) { return this->CancelServerFeedback(context, request, response); }));}
    void SetMessageAllocatorFor_CancelServerFeedback(
        ::grpc::MessageAllocator< ::PXREAService::VRPid, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::VRPid, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CancelServerFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendBeat() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->SendBeat(context, request, response); }));}
    void SetMessageAllocatorFor_SendBeat(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBeat(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceControlParameterJson, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response) { return this->DeviceControlJson(context, request, response); }));}
    void SetMessageAllocatorFor_DeviceControlJson(
        ::grpc::MessageAllocator< ::PXREAService::DeviceControlParameterJson, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceControlParameterJson, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeviceControlJson(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SendBytesToDevice<WithCallbackMethod_SendBytesToRoom<WithCallbackMethod_WatchServerFeedback<WithCallbackMethod_CancelServerFeedback<WithCallbackMethod_SendBeat<WithCallbackMethod_DeviceControlJson<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendBeat() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBytesToDevice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBytesToRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchServerFeedback(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCancelServerFeedback(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendBeat() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBeat(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeviceControlJson(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendBytesToDevice(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBytesToDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendBytesToRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBytesToRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->WatchServerFeedback(context, request); }));
    }
    ~WithRawCallbackMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* WatchServerFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CancelServerFeedback(context, request, response); }));
    }
    ~WithRawCallbackMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CancelServerFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendBeat() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendBeat(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBeat(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeviceControlJson(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeviceControlJson(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceBytesInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceBytesInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendBytesToDevice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendBytesToDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceBytesInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::RoomBytesInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::RoomBytesInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendBytesToRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendBytesToRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::RoomBytesInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::VRPid, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::VRPid, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedCancelServerFeedback(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCancelServerFeedback(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::VRPid,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendBeat() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendBeat(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendBeat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceControlParameterJson, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceControlParameterJson, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeviceControlJson(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeviceControlJson(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceControlParameterJson,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SendBytesToDevice<WithStreamedUnaryMethod_SendBytesToRoom<WithStreamedUnaryMethod_CancelServerFeedback<WithStreamedUnaryMethod_SendBeat<WithStreamedUnaryMethod_DeviceControlJson<Service > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::PXREAService::VRPid, ::PXREAService::ServerFeedback>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::PXREAService::VRPid, ::PXREAService::ServerFeedback>* streamer) {
                       return this->StreamedWatchServerFeedback(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedWatchServerFeedback(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::PXREAService::VRPid,::PXREAService::ServerFeedback>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_WatchServerFeedback<Service > SplitStreamedService;
  typedef WithStreamedUnaryMethod_SendBytesToDevice<WithStreamedUnaryMethod_SendBytesToRoom<WithSplitStreamingMethod_WatchServerFeedback<WithStreamedUnaryMethod_CancelServerFeedback<WithStreamedUnaryMethod_SendBeat<WithStreamedUnaryMethod_DeviceControlJson<Service > > > > > > StreamedService;
};

}  // namespace PXREAService


#endif  // GRPC_PXREAService_2eproto__INCLUDED
