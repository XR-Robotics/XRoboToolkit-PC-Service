// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: PXREAService.proto
#ifndef GRPC_PXREAService_2eproto__INCLUDED
#define GRPC_PXREAService_2eproto__INCLUDED

#include "PXREAService.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace PXREAService {

class EAService final {
 public:
  static constexpr char const* service_full_name() {
    return "PXREAService.EAService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status SendTexHandle(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendTexHandle(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendTexHandleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendTexHandle(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendTexHandleRaw(context, request, cq));
    }
    virtual ::grpc::Status GetBattery(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncGetBattery(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncGetBatteryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncGetBattery(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncGetBatteryRaw(context, request, cq));
    }
    virtual ::grpc::Status StartControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStartControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStartControlDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStartControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStartControlDeviceRaw(context, request, cq));
    }
    virtual ::grpc::Status StopControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStopControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStopControlDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStopControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStopControlDeviceRaw(context, request, cq));
    }
    virtual ::grpc::Status LockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncLockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncLockDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncLockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncLockDeviceRaw(context, request, cq));
    }
    virtual ::grpc::Status UnlockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncUnlockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncUnlockDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncUnlockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncUnlockDeviceRaw(context, request, cq));
    }
    virtual ::grpc::Status StartPlayVideo(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStartPlayVideo(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStartPlayVideoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStartPlayVideo(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStartPlayVideoRaw(context, request, cq));
    }
    virtual ::grpc::Status StopPlayVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStopPlayVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStopPlayVideoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStopPlayVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStopPlayVideoRaw(context, request, cq));
    }
    virtual ::grpc::Status SeekVideoTime(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSeekVideoTime(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSeekVideoTimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSeekVideoTime(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSeekVideoTimeRaw(context, request, cq));
    }
    virtual ::grpc::Status PauseVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncPauseVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncPauseVideoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncPauseVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncPauseVideoRaw(context, request, cq));
    }
    virtual ::grpc::Status ContinueVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncContinueVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncContinueVideoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncContinueVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncContinueVideoRaw(context, request, cq));
    }
    virtual ::grpc::Status StartPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStartPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStartPlayAppRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStartPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStartPlayAppRaw(context, request, cq));
    }
    virtual ::grpc::Status StopPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStopPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStopPlayAppRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStopPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStopPlayAppRaw(context, request, cq));
    }
    virtual ::grpc::Status StartPlayPicture(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStartPlayPicture(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStartPlayPictureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStartPlayPicture(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStartPlayPictureRaw(context, request, cq));
    }
    virtual ::grpc::Status StopPlayPicture(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStopPlayPicture(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStopPlayPictureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStopPlayPicture(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStopPlayPictureRaw(context, request, cq));
    }
    virtual ::grpc::Status SetDeviceVolumn(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetDeviceVolumn(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetDeviceVolumnRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetDeviceVolumn(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetDeviceVolumnRaw(context, request, cq));
    }
    virtual ::grpc::Status BackToHome(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncBackToHome(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncBackToHomeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncBackToHome(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncBackToHomeRaw(context, request, cq));
    }
    virtual ::grpc::Status ShutDownDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncShutDownDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncShutDownDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncShutDownDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncShutDownDeviceRaw(context, request, cq));
    }
    virtual ::grpc::Status RestartDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRestartDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRestartDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRestartDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRestartDeviceRaw(context, request, cq));
    }
    virtual ::grpc::Status SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendBytesToDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendBytesToDeviceRaw(context, request, cq));
    }
    virtual ::grpc::Status SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendBytesToRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendBytesToRoomRaw(context, request, cq));
    }
    virtual ::grpc::Status StartMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStartMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStartMonitorScreenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStartMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStartMonitorScreenRaw(context, request, cq));
    }
    virtual ::grpc::Status SetMonitorScreenQuality(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetMonitorScreenQuality(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetMonitorScreenQualityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetMonitorScreenQuality(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetMonitorScreenQualityRaw(context, request, cq));
    }
    virtual ::grpc::Status StopMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStopMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStopMonitorScreenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStopMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStopMonitorScreenRaw(context, request, cq));
    }
    virtual ::grpc::Status StartMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStartMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStartMonitorStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStartMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStartMonitorStreamRaw(context, request, cq));
    }
    virtual ::grpc::Status StopMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncStopMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncStopMonitorStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncStopMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncStopMonitorStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::PXREAService::ServerFeedback>> WatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::PXREAService::ServerFeedback>>(WatchServerFeedbackRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>> AsyncWatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>>(AsyncWatchServerFeedbackRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>> PrepareAsyncWatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>>(PrepareAsyncWatchServerFeedbackRaw(context, request, cq));
    }
    virtual ::grpc::Status CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncCancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncCancelServerFeedbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncCancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncCancelServerFeedbackRaw(context, request, cq));
    }
    virtual ::grpc::Status SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendBeatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendBeatRaw(context, request, cq));
    }
    virtual ::grpc::Status GetCurrentApp(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncGetCurrentApp(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncGetCurrentAppRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncGetCurrentApp(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncGetCurrentAppRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDeviceModel(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncGetDeviceModel(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncGetDeviceModelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncGetDeviceModel(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncGetDeviceModelRaw(context, request, cq));
    }
    virtual ::grpc::Status GetControllerBattery(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncGetControllerBattery(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncGetControllerBatteryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncGetControllerBattery(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncGetControllerBatteryRaw(context, request, cq));
    }
    virtual ::grpc::Status SetScreenState(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetScreenState(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetScreenStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetScreenState(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetScreenStateRaw(context, request, cq));
    }
    virtual ::grpc::Status GetScreenState(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncGetScreenState(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncGetScreenStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncGetScreenState(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncGetScreenStateRaw(context, request, cq));
    }
    virtual ::grpc::Status CustomControllerHomeButtonFunction(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncCustomControllerHomeButtonFunction(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncCustomControllerHomeButtonFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncCustomControllerHomeButtonFunction(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncCustomControllerHomeButtonFunctionRaw(context, request, cq));
    }
    virtual ::grpc::Status RecenterView(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRecenterView(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRecenterViewRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRecenterView(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRecenterViewRaw(context, request, cq));
    }
    virtual ::grpc::Status SetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSetDeviceAliasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSetDeviceAliasRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncGetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncGetDeviceAliasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncGetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncGetDeviceAliasRaw(context, request, cq));
    }
    virtual ::grpc::Status DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncDeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncDeviceControlJsonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncDeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncDeviceControlJsonRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void SendTexHandle(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendTexHandle(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetBattery(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBattery(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StartControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StopControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StopControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void LockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UnlockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnlockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StartPlayVideo(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartPlayVideo(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StopPlayVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StopPlayVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SeekVideoTime(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SeekVideoTime(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PauseVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PauseVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ContinueVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ContinueVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StartPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StopPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StopPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StartPlayPicture(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartPlayPicture(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StopPlayPicture(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StopPlayPicture(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetDeviceVolumn(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetDeviceVolumn(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void BackToHome(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BackToHome(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ShutDownDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ShutDownDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RestartDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RestartDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StartMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetMonitorScreenQuality(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetMonitorScreenQuality(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StopMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StopMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StartMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StartMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void StopMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void StopMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void WatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::grpc::ClientReadReactor< ::PXREAService::ServerFeedback>* reactor) = 0;
      virtual void CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetCurrentApp(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetCurrentApp(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDeviceModel(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDeviceModel(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetControllerBattery(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetControllerBattery(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetScreenState(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetScreenState(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetScreenState(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetScreenState(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CustomControllerHomeButtonFunction(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CustomControllerHomeButtonFunction(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RecenterView(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RecenterView(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendTexHandleRaw(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendTexHandleRaw(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncGetBatteryRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncGetBatteryRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStartControlDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStartControlDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStopControlDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStopControlDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncLockDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncLockDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncUnlockDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncUnlockDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStartPlayVideoRaw(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStartPlayVideoRaw(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStopPlayVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStopPlayVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSeekVideoTimeRaw(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSeekVideoTimeRaw(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncPauseVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncPauseVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncContinueVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncContinueVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStartPlayAppRaw(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStartPlayAppRaw(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStopPlayAppRaw(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStopPlayAppRaw(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStartPlayPictureRaw(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStartPlayPictureRaw(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStopPlayPictureRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStopPlayPictureRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetDeviceVolumnRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetDeviceVolumnRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncBackToHomeRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncBackToHomeRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncShutDownDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncShutDownDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRestartDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRestartDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendBytesToDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendBytesToDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendBytesToRoomRaw(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendBytesToRoomRaw(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStartMonitorScreenRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStartMonitorScreenRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetMonitorScreenQualityRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetMonitorScreenQualityRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStopMonitorScreenRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStopMonitorScreenRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStartMonitorStreamRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStartMonitorStreamRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncStopMonitorStreamRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncStopMonitorStreamRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::PXREAService::ServerFeedback>* WatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>* AsyncWatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::PXREAService::ServerFeedback>* PrepareAsyncWatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncCancelServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncCancelServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendBeatRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendBeatRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncGetCurrentAppRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncGetCurrentAppRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncGetDeviceModelRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncGetDeviceModelRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncGetControllerBatteryRaw(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncGetControllerBatteryRaw(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetScreenStateRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetScreenStateRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncGetScreenStateRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncGetScreenStateRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncCustomControllerHomeButtonFunctionRaw(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncCustomControllerHomeButtonFunctionRaw(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRecenterViewRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRecenterViewRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSetDeviceAliasRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSetDeviceAliasRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncGetDeviceAliasRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncGetDeviceAliasRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncDeviceControlJsonRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncDeviceControlJsonRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SendTexHandle(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendTexHandle(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendTexHandleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendTexHandle(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendTexHandleRaw(context, request, cq));
    }
    ::grpc::Status GetBattery(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncGetBattery(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncGetBatteryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncGetBattery(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncGetBatteryRaw(context, request, cq));
    }
    ::grpc::Status StartControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStartControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStartControlDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStartControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStartControlDeviceRaw(context, request, cq));
    }
    ::grpc::Status StopControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStopControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStopControlDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStopControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStopControlDeviceRaw(context, request, cq));
    }
    ::grpc::Status LockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncLockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncLockDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncLockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncLockDeviceRaw(context, request, cq));
    }
    ::grpc::Status UnlockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncUnlockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncUnlockDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncUnlockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncUnlockDeviceRaw(context, request, cq));
    }
    ::grpc::Status StartPlayVideo(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStartPlayVideo(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStartPlayVideoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStartPlayVideo(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStartPlayVideoRaw(context, request, cq));
    }
    ::grpc::Status StopPlayVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStopPlayVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStopPlayVideoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStopPlayVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStopPlayVideoRaw(context, request, cq));
    }
    ::grpc::Status SeekVideoTime(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSeekVideoTime(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSeekVideoTimeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSeekVideoTime(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSeekVideoTimeRaw(context, request, cq));
    }
    ::grpc::Status PauseVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncPauseVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncPauseVideoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncPauseVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncPauseVideoRaw(context, request, cq));
    }
    ::grpc::Status ContinueVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncContinueVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncContinueVideoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncContinueVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncContinueVideoRaw(context, request, cq));
    }
    ::grpc::Status StartPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStartPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStartPlayAppRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStartPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStartPlayAppRaw(context, request, cq));
    }
    ::grpc::Status StopPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStopPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStopPlayAppRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStopPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStopPlayAppRaw(context, request, cq));
    }
    ::grpc::Status StartPlayPicture(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStartPlayPicture(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStartPlayPictureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStartPlayPicture(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStartPlayPictureRaw(context, request, cq));
    }
    ::grpc::Status StopPlayPicture(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStopPlayPicture(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStopPlayPictureRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStopPlayPicture(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStopPlayPictureRaw(context, request, cq));
    }
    ::grpc::Status SetDeviceVolumn(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetDeviceVolumn(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetDeviceVolumnRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetDeviceVolumn(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetDeviceVolumnRaw(context, request, cq));
    }
    ::grpc::Status BackToHome(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncBackToHome(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncBackToHomeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncBackToHome(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncBackToHomeRaw(context, request, cq));
    }
    ::grpc::Status ShutDownDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncShutDownDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncShutDownDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncShutDownDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncShutDownDeviceRaw(context, request, cq));
    }
    ::grpc::Status RestartDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRestartDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRestartDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRestartDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRestartDeviceRaw(context, request, cq));
    }
    ::grpc::Status SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendBytesToDeviceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendBytesToDeviceRaw(context, request, cq));
    }
    ::grpc::Status SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendBytesToRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendBytesToRoomRaw(context, request, cq));
    }
    ::grpc::Status StartMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStartMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStartMonitorScreenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStartMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStartMonitorScreenRaw(context, request, cq));
    }
    ::grpc::Status SetMonitorScreenQuality(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetMonitorScreenQuality(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetMonitorScreenQualityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetMonitorScreenQuality(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetMonitorScreenQualityRaw(context, request, cq));
    }
    ::grpc::Status StopMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStopMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStopMonitorScreenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStopMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStopMonitorScreenRaw(context, request, cq));
    }
    ::grpc::Status StartMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStartMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStartMonitorStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStartMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStartMonitorStreamRaw(context, request, cq));
    }
    ::grpc::Status StopMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncStopMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncStopMonitorStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncStopMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncStopMonitorStreamRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::PXREAService::ServerFeedback>> WatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::PXREAService::ServerFeedback>>(WatchServerFeedbackRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>> AsyncWatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>>(AsyncWatchServerFeedbackRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>> PrepareAsyncWatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>>(PrepareAsyncWatchServerFeedbackRaw(context, request, cq));
    }
    ::grpc::Status CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncCancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncCancelServerFeedbackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncCancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncCancelServerFeedbackRaw(context, request, cq));
    }
    ::grpc::Status SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendBeatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendBeatRaw(context, request, cq));
    }
    ::grpc::Status GetCurrentApp(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncGetCurrentApp(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncGetCurrentAppRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncGetCurrentApp(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncGetCurrentAppRaw(context, request, cq));
    }
    ::grpc::Status GetDeviceModel(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncGetDeviceModel(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncGetDeviceModelRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncGetDeviceModel(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncGetDeviceModelRaw(context, request, cq));
    }
    ::grpc::Status GetControllerBattery(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncGetControllerBattery(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncGetControllerBatteryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncGetControllerBattery(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncGetControllerBatteryRaw(context, request, cq));
    }
    ::grpc::Status SetScreenState(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetScreenState(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetScreenStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetScreenState(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetScreenStateRaw(context, request, cq));
    }
    ::grpc::Status GetScreenState(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncGetScreenState(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncGetScreenStateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncGetScreenState(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncGetScreenStateRaw(context, request, cq));
    }
    ::grpc::Status CustomControllerHomeButtonFunction(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncCustomControllerHomeButtonFunction(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncCustomControllerHomeButtonFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncCustomControllerHomeButtonFunction(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncCustomControllerHomeButtonFunctionRaw(context, request, cq));
    }
    ::grpc::Status RecenterView(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRecenterView(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRecenterViewRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRecenterView(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRecenterViewRaw(context, request, cq));
    }
    ::grpc::Status SetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSetDeviceAliasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSetDeviceAliasRaw(context, request, cq));
    }
    ::grpc::Status GetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncGetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncGetDeviceAliasRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncGetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncGetDeviceAliasRaw(context, request, cq));
    }
    ::grpc::Status DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncDeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncDeviceControlJsonRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncDeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncDeviceControlJsonRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SendTexHandle(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendTexHandle(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBattery(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void GetBattery(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StartControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StartControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StopControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StopControlDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void LockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void LockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UnlockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void UnlockDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StartPlayVideo(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StartPlayVideo(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StopPlayVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StopPlayVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SeekVideoTime(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SeekVideoTime(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PauseVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void PauseVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ContinueVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ContinueVideo(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StartPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StartPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StopPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StopPlayApp(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StartPlayPicture(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StartPlayPicture(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StopPlayPicture(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StopPlayPicture(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetDeviceVolumn(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetDeviceVolumn(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BackToHome(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void BackToHome(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ShutDownDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void ShutDownDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RestartDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RestartDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendBytesToDevice(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendBytesToRoom(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StartMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StartMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetMonitorScreenQuality(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetMonitorScreenQuality(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StopMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StopMonitorScreen(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StartMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StartMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StopMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void StopMonitorStream(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void WatchServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::grpc::ClientReadReactor< ::PXREAService::ServerFeedback>* reactor) override;
      void CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void CancelServerFeedback(::grpc::ClientContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendBeat(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetCurrentApp(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void GetCurrentApp(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDeviceModel(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void GetDeviceModel(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetControllerBattery(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void GetControllerBattery(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetScreenState(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetScreenState(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetScreenState(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void GetScreenState(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CustomControllerHomeButtonFunction(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void CustomControllerHomeButtonFunction(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RecenterView(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RecenterView(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void GetDeviceAlias(::grpc::ClientContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void DeviceControlJson(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendTexHandleRaw(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendTexHandleRaw(::grpc::ClientContext* context, const ::PXREAService::TexHandleInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncGetBatteryRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncGetBatteryRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStartControlDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStartControlDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStopControlDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStopControlDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncLockDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncLockDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncUnlockDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncUnlockDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStartPlayVideoRaw(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStartPlayVideoRaw(::grpc::ClientContext* context, const ::PXREAService::VideoPlayInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStopPlayVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStopPlayVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSeekVideoTimeRaw(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSeekVideoTimeRaw(::grpc::ClientContext* context, const ::PXREAService::VideoSeekInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncPauseVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncPauseVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncContinueVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncContinueVideoRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStartPlayAppRaw(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStartPlayAppRaw(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStopPlayAppRaw(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStopPlayAppRaw(::grpc::ClientContext* context, const ::PXREAService::AppPlayInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStartPlayPictureRaw(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStartPlayPictureRaw(::grpc::ClientContext* context, const ::PXREAService::PicPlayInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStopPlayPictureRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStopPlayPictureRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetDeviceVolumnRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetDeviceVolumnRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceVolumnInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncBackToHomeRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncBackToHomeRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncShutDownDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncShutDownDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRestartDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRestartDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendBytesToDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendBytesToDeviceRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceBytesInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendBytesToRoomRaw(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendBytesToRoomRaw(::grpc::ClientContext* context, const ::PXREAService::RoomBytesInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStartMonitorScreenRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStartMonitorScreenRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetMonitorScreenQualityRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetMonitorScreenQualityRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenMonitorParameter& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStopMonitorScreenRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStopMonitorScreenRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStartMonitorStreamRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStartMonitorStreamRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncStopMonitorStreamRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncStopMonitorStreamRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::PXREAService::ServerFeedback>* WatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request) override;
    ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>* AsyncWatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::PXREAService::ServerFeedback>* PrepareAsyncWatchServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncCancelServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncCancelServerFeedbackRaw(::grpc::ClientContext* context, const ::PXREAService::VRPid& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendBeatRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendBeatRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncGetCurrentAppRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncGetCurrentAppRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncGetDeviceModelRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncGetDeviceModelRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncGetControllerBatteryRaw(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncGetControllerBatteryRaw(::grpc::ClientContext* context, const ::PXREAService::ControllerInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetScreenStateRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetScreenStateRaw(::grpc::ClientContext* context, const ::PXREAService::ScreenStateInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncGetScreenStateRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncGetScreenStateRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncCustomControllerHomeButtonFunctionRaw(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncCustomControllerHomeButtonFunctionRaw(::grpc::ClientContext* context, const ::PXREAService::ControllerHomeButtonFunction& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRecenterViewRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRecenterViewRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSetDeviceAliasRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSetDeviceAliasRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceAliasInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncGetDeviceAliasRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncGetDeviceAliasRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceID& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncDeviceControlJsonRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncDeviceControlJsonRaw(::grpc::ClientContext* context, const ::PXREAService::DeviceControlParameterJson& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SendTexHandle_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBattery_;
    const ::grpc::internal::RpcMethod rpcmethod_StartControlDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_StopControlDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_LockDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_UnlockDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_StartPlayVideo_;
    const ::grpc::internal::RpcMethod rpcmethod_StopPlayVideo_;
    const ::grpc::internal::RpcMethod rpcmethod_SeekVideoTime_;
    const ::grpc::internal::RpcMethod rpcmethod_PauseVideo_;
    const ::grpc::internal::RpcMethod rpcmethod_ContinueVideo_;
    const ::grpc::internal::RpcMethod rpcmethod_StartPlayApp_;
    const ::grpc::internal::RpcMethod rpcmethod_StopPlayApp_;
    const ::grpc::internal::RpcMethod rpcmethod_StartPlayPicture_;
    const ::grpc::internal::RpcMethod rpcmethod_StopPlayPicture_;
    const ::grpc::internal::RpcMethod rpcmethod_SetDeviceVolumn_;
    const ::grpc::internal::RpcMethod rpcmethod_BackToHome_;
    const ::grpc::internal::RpcMethod rpcmethod_ShutDownDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_RestartDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_SendBytesToDevice_;
    const ::grpc::internal::RpcMethod rpcmethod_SendBytesToRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_StartMonitorScreen_;
    const ::grpc::internal::RpcMethod rpcmethod_SetMonitorScreenQuality_;
    const ::grpc::internal::RpcMethod rpcmethod_StopMonitorScreen_;
    const ::grpc::internal::RpcMethod rpcmethod_StartMonitorStream_;
    const ::grpc::internal::RpcMethod rpcmethod_StopMonitorStream_;
    const ::grpc::internal::RpcMethod rpcmethod_WatchServerFeedback_;
    const ::grpc::internal::RpcMethod rpcmethod_CancelServerFeedback_;
    const ::grpc::internal::RpcMethod rpcmethod_SendBeat_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCurrentApp_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDeviceModel_;
    const ::grpc::internal::RpcMethod rpcmethod_GetControllerBattery_;
    const ::grpc::internal::RpcMethod rpcmethod_SetScreenState_;
    const ::grpc::internal::RpcMethod rpcmethod_GetScreenState_;
    const ::grpc::internal::RpcMethod rpcmethod_CustomControllerHomeButtonFunction_;
    const ::grpc::internal::RpcMethod rpcmethod_RecenterView_;
    const ::grpc::internal::RpcMethod rpcmethod_SetDeviceAlias_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDeviceAlias_;
    const ::grpc::internal::RpcMethod rpcmethod_DeviceControlJson_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status SendTexHandle(::grpc::ServerContext* context, const ::PXREAService::TexHandleInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetBattery(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StartControlDevice(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StopControlDevice(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status LockDevice(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status UnlockDevice(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StartPlayVideo(::grpc::ServerContext* context, const ::PXREAService::VideoPlayInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StopPlayVideo(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SeekVideoTime(::grpc::ServerContext* context, const ::PXREAService::VideoSeekInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status PauseVideo(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status ContinueVideo(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StartPlayApp(::grpc::ServerContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StopPlayApp(::grpc::ServerContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StartPlayPicture(::grpc::ServerContext* context, const ::PXREAService::PicPlayInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StopPlayPicture(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetDeviceVolumn(::grpc::ServerContext* context, const ::PXREAService::DeviceVolumnInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status BackToHome(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status ShutDownDevice(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status RestartDevice(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SendBytesToDevice(::grpc::ServerContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SendBytesToRoom(::grpc::ServerContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StartMonitorScreen(::grpc::ServerContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetMonitorScreenQuality(::grpc::ServerContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StopMonitorScreen(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StartMonitorStream(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status StopMonitorStream(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status WatchServerFeedback(::grpc::ServerContext* context, const ::PXREAService::VRPid* request, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* writer);
    virtual ::grpc::Status CancelServerFeedback(::grpc::ServerContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SendBeat(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetCurrentApp(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetDeviceModel(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetControllerBattery(::grpc::ServerContext* context, const ::PXREAService::ControllerInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetScreenState(::grpc::ServerContext* context, const ::PXREAService::ScreenStateInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetScreenState(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status CustomControllerHomeButtonFunction(::grpc::ServerContext* context, const ::PXREAService::ControllerHomeButtonFunction* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status RecenterView(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SetDeviceAlias(::grpc::ServerContext* context, const ::PXREAService::DeviceAliasInfo* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status GetDeviceAlias(::grpc::ServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status DeviceControlJson(::grpc::ServerContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_SendTexHandle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendTexHandle() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SendTexHandle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendTexHandle(::grpc::ServerContext* /*context*/, const ::PXREAService::TexHandleInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendTexHandle(::grpc::ServerContext* context, ::PXREAService::TexHandleInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBattery() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBattery(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartControlDevice() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_StartControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartControlDevice(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopControlDevice() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_StopControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopControlDevice(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_LockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_LockDevice() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_LockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLockDevice(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnlockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnlockDevice() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_UnlockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlockDevice(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartPlayVideo() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_StartPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartPlayVideo(::grpc::ServerContext* context, ::PXREAService::VideoPlayInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopPlayVideo() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_StopPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopPlayVideo(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SeekVideoTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SeekVideoTime() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_SeekVideoTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SeekVideoTime(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoSeekInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSeekVideoTime(::grpc::ServerContext* context, ::PXREAService::VideoSeekInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PauseVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PauseVideo() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_PauseVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPauseVideo(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ContinueVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ContinueVideo() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_ContinueVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ContinueVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestContinueVideo(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartPlayApp() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_StartPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartPlayApp(::grpc::ServerContext* context, ::PXREAService::AppPlayInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopPlayApp() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_StopPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopPlayApp(::grpc::ServerContext* context, ::PXREAService::AppPlayInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartPlayPicture() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_StartPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::PicPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartPlayPicture(::grpc::ServerContext* context, ::PXREAService::PicPlayInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopPlayPicture() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_StopPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopPlayPicture(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetDeviceVolumn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetDeviceVolumn() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_SetDeviceVolumn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDeviceVolumn(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceVolumnInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetDeviceVolumn(::grpc::ServerContext* context, ::PXREAService::DeviceVolumnInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BackToHome : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BackToHome() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_BackToHome() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BackToHome(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBackToHome(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShutDownDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ShutDownDevice() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_ShutDownDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShutDownDevice(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RestartDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RestartDevice() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_RestartDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RestartDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRestartDevice(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBytesToDevice(::grpc::ServerContext* context, ::PXREAService::DeviceBytesInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBytesToRoom(::grpc::ServerContext* context, ::PXREAService::RoomBytesInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartMonitorScreen() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_StartMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartMonitorScreen(::grpc::ServerContext* context, ::PXREAService::ScreenMonitorParameter* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetMonitorScreenQuality : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetMonitorScreenQuality() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_SetMonitorScreenQuality() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMonitorScreenQuality(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetMonitorScreenQuality(::grpc::ServerContext* context, ::PXREAService::ScreenMonitorParameter* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopMonitorScreen() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_StopMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopMonitorScreen(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StartMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StartMonitorStream() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_StartMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartMonitorStream(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StopMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StopMonitorStream() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_StopMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopMonitorStream(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchServerFeedback(::grpc::ServerContext* context, ::PXREAService::VRPid* request, ::grpc::ServerAsyncWriter< ::PXREAService::ServerFeedback>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(26, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCancelServerFeedback(::grpc::ServerContext* context, ::PXREAService::VRPid* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendBeat() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBeat(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCurrentApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetCurrentApp() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_GetCurrentApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCurrentApp(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCurrentApp(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDeviceModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDeviceModel() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_GetDeviceModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceModel(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeviceModel(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetControllerBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetControllerBattery() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_GetControllerBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetControllerBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetControllerBattery(::grpc::ServerContext* context, ::PXREAService::ControllerInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetScreenState() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_SetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenStateInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetScreenState(::grpc::ServerContext* context, ::PXREAService::ScreenStateInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetScreenState() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_GetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetScreenState(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CustomControllerHomeButtonFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CustomControllerHomeButtonFunction() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_CustomControllerHomeButtonFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CustomControllerHomeButtonFunction(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerHomeButtonFunction* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCustomControllerHomeButtonFunction(::grpc::ServerContext* context, ::PXREAService::ControllerHomeButtonFunction* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RecenterView : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RecenterView() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_RecenterView() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RecenterView(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRecenterView(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetDeviceAlias() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_SetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceAliasInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetDeviceAlias(::grpc::ServerContext* context, ::PXREAService::DeviceAliasInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDeviceAlias() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_GetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeviceAlias(::grpc::ServerContext* context, ::PXREAService::DeviceID* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeviceControlJson(::grpc::ServerContext* context, ::PXREAService::DeviceControlParameterJson* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SendTexHandle<WithAsyncMethod_GetBattery<WithAsyncMethod_StartControlDevice<WithAsyncMethod_StopControlDevice<WithAsyncMethod_LockDevice<WithAsyncMethod_UnlockDevice<WithAsyncMethod_StartPlayVideo<WithAsyncMethod_StopPlayVideo<WithAsyncMethod_SeekVideoTime<WithAsyncMethod_PauseVideo<WithAsyncMethod_ContinueVideo<WithAsyncMethod_StartPlayApp<WithAsyncMethod_StopPlayApp<WithAsyncMethod_StartPlayPicture<WithAsyncMethod_StopPlayPicture<WithAsyncMethod_SetDeviceVolumn<WithAsyncMethod_BackToHome<WithAsyncMethod_ShutDownDevice<WithAsyncMethod_RestartDevice<WithAsyncMethod_SendBytesToDevice<WithAsyncMethod_SendBytesToRoom<WithAsyncMethod_StartMonitorScreen<WithAsyncMethod_SetMonitorScreenQuality<WithAsyncMethod_StopMonitorScreen<WithAsyncMethod_StartMonitorStream<WithAsyncMethod_StopMonitorStream<WithAsyncMethod_WatchServerFeedback<WithAsyncMethod_CancelServerFeedback<WithAsyncMethod_SendBeat<WithAsyncMethod_GetCurrentApp<WithAsyncMethod_GetDeviceModel<WithAsyncMethod_GetControllerBattery<WithAsyncMethod_SetScreenState<WithAsyncMethod_GetScreenState<WithAsyncMethod_CustomControllerHomeButtonFunction<WithAsyncMethod_RecenterView<WithAsyncMethod_SetDeviceAlias<WithAsyncMethod_GetDeviceAlias<WithAsyncMethod_DeviceControlJson<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SendTexHandle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendTexHandle() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::TexHandleInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::TexHandleInfo* request, ::google::protobuf::Empty* response) { return this->SendTexHandle(context, request, response); }));}
    void SetMessageAllocatorFor_SendTexHandle(
        ::grpc::MessageAllocator< ::PXREAService::TexHandleInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::TexHandleInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendTexHandle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendTexHandle(::grpc::ServerContext* /*context*/, const ::PXREAService::TexHandleInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendTexHandle(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::TexHandleInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBattery() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->GetBattery(context, request, response); }));}
    void SetMessageAllocatorFor_GetBattery(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBattery(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StartControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StartControlDevice() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->StartControlDevice(context, request, response); }));}
    void SetMessageAllocatorFor_StartControlDevice(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StartControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartControlDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StopControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StopControlDevice() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->StopControlDevice(context, request, response); }));}
    void SetMessageAllocatorFor_StopControlDevice(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StopControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopControlDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_LockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_LockDevice() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->LockDevice(context, request, response); }));}
    void SetMessageAllocatorFor_LockDevice(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_LockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LockDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UnlockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UnlockDevice() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->UnlockDevice(context, request, response); }));}
    void SetMessageAllocatorFor_UnlockDevice(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UnlockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnlockDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StartPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StartPlayVideo() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::VideoPlayInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::VideoPlayInfo* request, ::google::protobuf::Empty* response) { return this->StartPlayVideo(context, request, response); }));}
    void SetMessageAllocatorFor_StartPlayVideo(
        ::grpc::MessageAllocator< ::PXREAService::VideoPlayInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::VideoPlayInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StartPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartPlayVideo(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::VideoPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StopPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StopPlayVideo() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->StopPlayVideo(context, request, response); }));}
    void SetMessageAllocatorFor_StopPlayVideo(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StopPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopPlayVideo(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SeekVideoTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SeekVideoTime() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::VideoSeekInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::VideoSeekInfo* request, ::google::protobuf::Empty* response) { return this->SeekVideoTime(context, request, response); }));}
    void SetMessageAllocatorFor_SeekVideoTime(
        ::grpc::MessageAllocator< ::PXREAService::VideoSeekInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::VideoSeekInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SeekVideoTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SeekVideoTime(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoSeekInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SeekVideoTime(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::VideoSeekInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PauseVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PauseVideo() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->PauseVideo(context, request, response); }));}
    void SetMessageAllocatorFor_PauseVideo(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PauseVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PauseVideo(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ContinueVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ContinueVideo() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->ContinueVideo(context, request, response); }));}
    void SetMessageAllocatorFor_ContinueVideo(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ContinueVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ContinueVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ContinueVideo(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StartPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StartPlayApp() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::AppPlayInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response) { return this->StartPlayApp(context, request, response); }));}
    void SetMessageAllocatorFor_StartPlayApp(
        ::grpc::MessageAllocator< ::PXREAService::AppPlayInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::AppPlayInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StartPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartPlayApp(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StopPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StopPlayApp() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::AppPlayInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::AppPlayInfo* request, ::google::protobuf::Empty* response) { return this->StopPlayApp(context, request, response); }));}
    void SetMessageAllocatorFor_StopPlayApp(
        ::grpc::MessageAllocator< ::PXREAService::AppPlayInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::AppPlayInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StopPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopPlayApp(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StartPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StartPlayPicture() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::PicPlayInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::PicPlayInfo* request, ::google::protobuf::Empty* response) { return this->StartPlayPicture(context, request, response); }));}
    void SetMessageAllocatorFor_StartPlayPicture(
        ::grpc::MessageAllocator< ::PXREAService::PicPlayInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::PicPlayInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StartPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::PicPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartPlayPicture(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::PicPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StopPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StopPlayPicture() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->StopPlayPicture(context, request, response); }));}
    void SetMessageAllocatorFor_StopPlayPicture(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StopPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopPlayPicture(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetDeviceVolumn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetDeviceVolumn() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceVolumnInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceVolumnInfo* request, ::google::protobuf::Empty* response) { return this->SetDeviceVolumn(context, request, response); }));}
    void SetMessageAllocatorFor_SetDeviceVolumn(
        ::grpc::MessageAllocator< ::PXREAService::DeviceVolumnInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceVolumnInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetDeviceVolumn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDeviceVolumn(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceVolumnInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetDeviceVolumn(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceVolumnInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BackToHome : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BackToHome() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->BackToHome(context, request, response); }));}
    void SetMessageAllocatorFor_BackToHome(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BackToHome() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BackToHome(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BackToHome(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ShutDownDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ShutDownDevice() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->ShutDownDevice(context, request, response); }));}
    void SetMessageAllocatorFor_ShutDownDevice(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ShutDownDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ShutDownDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RestartDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RestartDevice() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->RestartDevice(context, request, response); }));}
    void SetMessageAllocatorFor_RestartDevice(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RestartDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RestartDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RestartDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceBytesInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceBytesInfo* request, ::google::protobuf::Empty* response) { return this->SendBytesToDevice(context, request, response); }));}
    void SetMessageAllocatorFor_SendBytesToDevice(
        ::grpc::MessageAllocator< ::PXREAService::DeviceBytesInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceBytesInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBytesToDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::RoomBytesInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::RoomBytesInfo* request, ::google::protobuf::Empty* response) { return this->SendBytesToRoom(context, request, response); }));}
    void SetMessageAllocatorFor_SendBytesToRoom(
        ::grpc::MessageAllocator< ::PXREAService::RoomBytesInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::RoomBytesInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBytesToRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StartMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StartMonitorScreen() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::ScreenMonitorParameter, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response) { return this->StartMonitorScreen(context, request, response); }));}
    void SetMessageAllocatorFor_StartMonitorScreen(
        ::grpc::MessageAllocator< ::PXREAService::ScreenMonitorParameter, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::ScreenMonitorParameter, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StartMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartMonitorScreen(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetMonitorScreenQuality : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetMonitorScreenQuality() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::ScreenMonitorParameter, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::ScreenMonitorParameter* request, ::google::protobuf::Empty* response) { return this->SetMonitorScreenQuality(context, request, response); }));}
    void SetMessageAllocatorFor_SetMonitorScreenQuality(
        ::grpc::MessageAllocator< ::PXREAService::ScreenMonitorParameter, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::ScreenMonitorParameter, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetMonitorScreenQuality() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMonitorScreenQuality(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetMonitorScreenQuality(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StopMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StopMonitorScreen() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->StopMonitorScreen(context, request, response); }));}
    void SetMessageAllocatorFor_StopMonitorScreen(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StopMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopMonitorScreen(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StartMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StartMonitorStream() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->StartMonitorStream(context, request, response); }));}
    void SetMessageAllocatorFor_StartMonitorStream(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StartMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartMonitorStream(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StopMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StopMonitorStream() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->StopMonitorStream(context, request, response); }));}
    void SetMessageAllocatorFor_StopMonitorStream(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_StopMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopMonitorStream(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodCallback(26,
          new ::grpc::internal::CallbackServerStreamingHandler< ::PXREAService::VRPid, ::PXREAService::ServerFeedback>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::VRPid* request) { return this->WatchServerFeedback(context, request); }));
    }
    ~WithCallbackMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::PXREAService::ServerFeedback>* WatchServerFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::VRPid, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::VRPid* request, ::google::protobuf::Empty* response) { return this->CancelServerFeedback(context, request, response); }));}
    void SetMessageAllocatorFor_CancelServerFeedback(
        ::grpc::MessageAllocator< ::PXREAService::VRPid, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(27);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::VRPid, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CancelServerFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendBeat() {
      ::grpc::Service::MarkMethodCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request, ::google::protobuf::Empty* response) { return this->SendBeat(context, request, response); }));}
    void SetMessageAllocatorFor_SendBeat(
        ::grpc::MessageAllocator< ::google::protobuf::Empty, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(28);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBeat(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetCurrentApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetCurrentApp() {
      ::grpc::Service::MarkMethodCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->GetCurrentApp(context, request, response); }));}
    void SetMessageAllocatorFor_GetCurrentApp(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(29);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetCurrentApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCurrentApp(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCurrentApp(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDeviceModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDeviceModel() {
      ::grpc::Service::MarkMethodCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->GetDeviceModel(context, request, response); }));}
    void SetMessageAllocatorFor_GetDeviceModel(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(30);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDeviceModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceModel(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDeviceModel(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetControllerBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetControllerBattery() {
      ::grpc::Service::MarkMethodCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::ControllerInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::ControllerInfo* request, ::google::protobuf::Empty* response) { return this->GetControllerBattery(context, request, response); }));}
    void SetMessageAllocatorFor_GetControllerBattery(
        ::grpc::MessageAllocator< ::PXREAService::ControllerInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(31);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::ControllerInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetControllerBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetControllerBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetControllerBattery(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::ControllerInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetScreenState() {
      ::grpc::Service::MarkMethodCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::ScreenStateInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::ScreenStateInfo* request, ::google::protobuf::Empty* response) { return this->SetScreenState(context, request, response); }));}
    void SetMessageAllocatorFor_SetScreenState(
        ::grpc::MessageAllocator< ::PXREAService::ScreenStateInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(32);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::ScreenStateInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenStateInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetScreenState(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::ScreenStateInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetScreenState() {
      ::grpc::Service::MarkMethodCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->GetScreenState(context, request, response); }));}
    void SetMessageAllocatorFor_GetScreenState(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(33);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetScreenState(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CustomControllerHomeButtonFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CustomControllerHomeButtonFunction() {
      ::grpc::Service::MarkMethodCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::ControllerHomeButtonFunction, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::ControllerHomeButtonFunction* request, ::google::protobuf::Empty* response) { return this->CustomControllerHomeButtonFunction(context, request, response); }));}
    void SetMessageAllocatorFor_CustomControllerHomeButtonFunction(
        ::grpc::MessageAllocator< ::PXREAService::ControllerHomeButtonFunction, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(34);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::ControllerHomeButtonFunction, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CustomControllerHomeButtonFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CustomControllerHomeButtonFunction(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerHomeButtonFunction* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CustomControllerHomeButtonFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::ControllerHomeButtonFunction* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RecenterView : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RecenterView() {
      ::grpc::Service::MarkMethodCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->RecenterView(context, request, response); }));}
    void SetMessageAllocatorFor_RecenterView(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(35);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RecenterView() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RecenterView(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RecenterView(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetDeviceAlias() {
      ::grpc::Service::MarkMethodCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceAliasInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceAliasInfo* request, ::google::protobuf::Empty* response) { return this->SetDeviceAlias(context, request, response); }));}
    void SetMessageAllocatorFor_SetDeviceAlias(
        ::grpc::MessageAllocator< ::PXREAService::DeviceAliasInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(36);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceAliasInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceAliasInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetDeviceAlias(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceAliasInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDeviceAlias() {
      ::grpc::Service::MarkMethodCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceID* request, ::google::protobuf::Empty* response) { return this->GetDeviceAlias(context, request, response); }));}
    void SetMessageAllocatorFor_GetDeviceAlias(
        ::grpc::MessageAllocator< ::PXREAService::DeviceID, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(37);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceID, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDeviceAlias(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceControlParameterJson, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::PXREAService::DeviceControlParameterJson* request, ::google::protobuf::Empty* response) { return this->DeviceControlJson(context, request, response); }));}
    void SetMessageAllocatorFor_DeviceControlJson(
        ::grpc::MessageAllocator< ::PXREAService::DeviceControlParameterJson, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(38);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::PXREAService::DeviceControlParameterJson, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeviceControlJson(
      ::grpc::CallbackServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_SendTexHandle<WithCallbackMethod_GetBattery<WithCallbackMethod_StartControlDevice<WithCallbackMethod_StopControlDevice<WithCallbackMethod_LockDevice<WithCallbackMethod_UnlockDevice<WithCallbackMethod_StartPlayVideo<WithCallbackMethod_StopPlayVideo<WithCallbackMethod_SeekVideoTime<WithCallbackMethod_PauseVideo<WithCallbackMethod_ContinueVideo<WithCallbackMethod_StartPlayApp<WithCallbackMethod_StopPlayApp<WithCallbackMethod_StartPlayPicture<WithCallbackMethod_StopPlayPicture<WithCallbackMethod_SetDeviceVolumn<WithCallbackMethod_BackToHome<WithCallbackMethod_ShutDownDevice<WithCallbackMethod_RestartDevice<WithCallbackMethod_SendBytesToDevice<WithCallbackMethod_SendBytesToRoom<WithCallbackMethod_StartMonitorScreen<WithCallbackMethod_SetMonitorScreenQuality<WithCallbackMethod_StopMonitorScreen<WithCallbackMethod_StartMonitorStream<WithCallbackMethod_StopMonitorStream<WithCallbackMethod_WatchServerFeedback<WithCallbackMethod_CancelServerFeedback<WithCallbackMethod_SendBeat<WithCallbackMethod_GetCurrentApp<WithCallbackMethod_GetDeviceModel<WithCallbackMethod_GetControllerBattery<WithCallbackMethod_SetScreenState<WithCallbackMethod_GetScreenState<WithCallbackMethod_CustomControllerHomeButtonFunction<WithCallbackMethod_RecenterView<WithCallbackMethod_SetDeviceAlias<WithCallbackMethod_GetDeviceAlias<WithCallbackMethod_DeviceControlJson<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SendTexHandle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendTexHandle() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SendTexHandle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendTexHandle(::grpc::ServerContext* /*context*/, const ::PXREAService::TexHandleInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBattery() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartControlDevice() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_StartControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopControlDevice() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_StopControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_LockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_LockDevice() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_LockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnlockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnlockDevice() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_UnlockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartPlayVideo() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_StartPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopPlayVideo() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_StopPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SeekVideoTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SeekVideoTime() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_SeekVideoTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SeekVideoTime(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoSeekInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PauseVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PauseVideo() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_PauseVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ContinueVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ContinueVideo() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_ContinueVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ContinueVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartPlayApp() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_StartPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopPlayApp() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_StopPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartPlayPicture() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_StartPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::PicPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopPlayPicture() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_StopPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetDeviceVolumn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetDeviceVolumn() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_SetDeviceVolumn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDeviceVolumn(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceVolumnInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BackToHome : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BackToHome() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_BackToHome() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BackToHome(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShutDownDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ShutDownDevice() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_ShutDownDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RestartDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RestartDevice() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_RestartDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RestartDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartMonitorScreen() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_StartMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetMonitorScreenQuality : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetMonitorScreenQuality() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_SetMonitorScreenQuality() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMonitorScreenQuality(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopMonitorScreen() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_StopMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StartMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StartMonitorStream() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_StartMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StopMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StopMonitorStream() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_StopMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendBeat() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCurrentApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetCurrentApp() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_GetCurrentApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCurrentApp(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDeviceModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDeviceModel() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_GetDeviceModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceModel(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetControllerBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetControllerBattery() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_GetControllerBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetControllerBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetScreenState() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_SetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenStateInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetScreenState() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_GetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CustomControllerHomeButtonFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CustomControllerHomeButtonFunction() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_CustomControllerHomeButtonFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CustomControllerHomeButtonFunction(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerHomeButtonFunction* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RecenterView : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RecenterView() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_RecenterView() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RecenterView(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetDeviceAlias() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_SetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceAliasInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDeviceAlias() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_GetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendTexHandle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendTexHandle() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SendTexHandle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendTexHandle(::grpc::ServerContext* /*context*/, const ::PXREAService::TexHandleInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendTexHandle(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBattery() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBattery(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartControlDevice() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_StartControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartControlDevice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopControlDevice() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_StopControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopControlDevice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_LockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_LockDevice() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_LockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLockDevice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnlockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnlockDevice() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_UnlockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnlockDevice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartPlayVideo() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_StartPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartPlayVideo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopPlayVideo() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_StopPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopPlayVideo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SeekVideoTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SeekVideoTime() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_SeekVideoTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SeekVideoTime(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoSeekInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSeekVideoTime(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PauseVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PauseVideo() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_PauseVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPauseVideo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ContinueVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ContinueVideo() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_ContinueVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ContinueVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestContinueVideo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartPlayApp() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_StartPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartPlayApp(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopPlayApp() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_StopPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopPlayApp(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartPlayPicture() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_StartPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::PicPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartPlayPicture(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopPlayPicture() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_StopPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopPlayPicture(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetDeviceVolumn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetDeviceVolumn() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_SetDeviceVolumn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDeviceVolumn(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceVolumnInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetDeviceVolumn(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BackToHome : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BackToHome() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_BackToHome() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BackToHome(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBackToHome(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ShutDownDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ShutDownDevice() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_ShutDownDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShutDownDevice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RestartDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RestartDevice() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_RestartDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RestartDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRestartDevice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBytesToDevice(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBytesToRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartMonitorScreen() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_StartMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartMonitorScreen(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetMonitorScreenQuality : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetMonitorScreenQuality() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_SetMonitorScreenQuality() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMonitorScreenQuality(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetMonitorScreenQuality(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopMonitorScreen() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_StopMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopMonitorScreen(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StartMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StartMonitorStream() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_StartMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStartMonitorStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StopMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StopMonitorStream() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_StopMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStopMonitorStream(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodRaw(26);
    }
    ~WithRawMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatchServerFeedback(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(26, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodRaw(27);
    }
    ~WithRawMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCancelServerFeedback(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendBeat() {
      ::grpc::Service::MarkMethodRaw(28);
    }
    ~WithRawMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendBeat(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCurrentApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetCurrentApp() {
      ::grpc::Service::MarkMethodRaw(29);
    }
    ~WithRawMethod_GetCurrentApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCurrentApp(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCurrentApp(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDeviceModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDeviceModel() {
      ::grpc::Service::MarkMethodRaw(30);
    }
    ~WithRawMethod_GetDeviceModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceModel(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeviceModel(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetControllerBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetControllerBattery() {
      ::grpc::Service::MarkMethodRaw(31);
    }
    ~WithRawMethod_GetControllerBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetControllerBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetControllerBattery(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetScreenState() {
      ::grpc::Service::MarkMethodRaw(32);
    }
    ~WithRawMethod_SetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenStateInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetScreenState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetScreenState() {
      ::grpc::Service::MarkMethodRaw(33);
    }
    ~WithRawMethod_GetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetScreenState(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CustomControllerHomeButtonFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CustomControllerHomeButtonFunction() {
      ::grpc::Service::MarkMethodRaw(34);
    }
    ~WithRawMethod_CustomControllerHomeButtonFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CustomControllerHomeButtonFunction(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerHomeButtonFunction* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCustomControllerHomeButtonFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RecenterView : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RecenterView() {
      ::grpc::Service::MarkMethodRaw(35);
    }
    ~WithRawMethod_RecenterView() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RecenterView(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRecenterView(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetDeviceAlias() {
      ::grpc::Service::MarkMethodRaw(36);
    }
    ~WithRawMethod_SetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceAliasInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetDeviceAlias(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDeviceAlias() {
      ::grpc::Service::MarkMethodRaw(37);
    }
    ~WithRawMethod_GetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDeviceAlias(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodRaw(38);
    }
    ~WithRawMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeviceControlJson(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendTexHandle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendTexHandle() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendTexHandle(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendTexHandle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendTexHandle(::grpc::ServerContext* /*context*/, const ::PXREAService::TexHandleInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendTexHandle(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBattery() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBattery(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBattery(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StartControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StartControlDevice() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartControlDevice(context, request, response); }));
    }
    ~WithRawCallbackMethod_StartControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartControlDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StopControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StopControlDevice() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopControlDevice(context, request, response); }));
    }
    ~WithRawCallbackMethod_StopControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopControlDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_LockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_LockDevice() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->LockDevice(context, request, response); }));
    }
    ~WithRawCallbackMethod_LockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LockDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UnlockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UnlockDevice() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnlockDevice(context, request, response); }));
    }
    ~WithRawCallbackMethod_UnlockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnlockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnlockDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StartPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StartPlayVideo() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartPlayVideo(context, request, response); }));
    }
    ~WithRawCallbackMethod_StartPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartPlayVideo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StopPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StopPlayVideo() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopPlayVideo(context, request, response); }));
    }
    ~WithRawCallbackMethod_StopPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopPlayVideo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SeekVideoTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SeekVideoTime() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SeekVideoTime(context, request, response); }));
    }
    ~WithRawCallbackMethod_SeekVideoTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SeekVideoTime(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoSeekInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SeekVideoTime(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PauseVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PauseVideo() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PauseVideo(context, request, response); }));
    }
    ~WithRawCallbackMethod_PauseVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PauseVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PauseVideo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ContinueVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ContinueVideo() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ContinueVideo(context, request, response); }));
    }
    ~WithRawCallbackMethod_ContinueVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ContinueVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ContinueVideo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StartPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StartPlayApp() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartPlayApp(context, request, response); }));
    }
    ~WithRawCallbackMethod_StartPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartPlayApp(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StopPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StopPlayApp() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopPlayApp(context, request, response); }));
    }
    ~WithRawCallbackMethod_StopPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopPlayApp(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StartPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StartPlayPicture() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartPlayPicture(context, request, response); }));
    }
    ~WithRawCallbackMethod_StartPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::PicPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartPlayPicture(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StopPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StopPlayPicture() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopPlayPicture(context, request, response); }));
    }
    ~WithRawCallbackMethod_StopPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopPlayPicture(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetDeviceVolumn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetDeviceVolumn() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetDeviceVolumn(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetDeviceVolumn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDeviceVolumn(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceVolumnInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetDeviceVolumn(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BackToHome : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BackToHome() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BackToHome(context, request, response); }));
    }
    ~WithRawCallbackMethod_BackToHome() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BackToHome(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BackToHome(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ShutDownDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ShutDownDevice() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ShutDownDevice(context, request, response); }));
    }
    ~WithRawCallbackMethod_ShutDownDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShutDownDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ShutDownDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RestartDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RestartDevice() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RestartDevice(context, request, response); }));
    }
    ~WithRawCallbackMethod_RestartDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RestartDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RestartDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendBytesToDevice(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBytesToDevice(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendBytesToRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBytesToRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StartMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StartMonitorScreen() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartMonitorScreen(context, request, response); }));
    }
    ~WithRawCallbackMethod_StartMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartMonitorScreen(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetMonitorScreenQuality : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetMonitorScreenQuality() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetMonitorScreenQuality(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetMonitorScreenQuality() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetMonitorScreenQuality(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetMonitorScreenQuality(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StopMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StopMonitorScreen() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopMonitorScreen(context, request, response); }));
    }
    ~WithRawCallbackMethod_StopMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopMonitorScreen(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StartMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StartMonitorStream() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StartMonitorStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_StartMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StartMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StartMonitorStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StopMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StopMonitorStream() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->StopMonitorStream(context, request, response); }));
    }
    ~WithRawCallbackMethod_StopMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StopMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* StopMonitorStream(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodRawCallback(26,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->WatchServerFeedback(context, request); }));
    }
    ~WithRawCallbackMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* WatchServerFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodRawCallback(27,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CancelServerFeedback(context, request, response); }));
    }
    ~WithRawCallbackMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CancelServerFeedback(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendBeat() {
      ::grpc::Service::MarkMethodRawCallback(28,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendBeat(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendBeat(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetCurrentApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetCurrentApp() {
      ::grpc::Service::MarkMethodRawCallback(29,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetCurrentApp(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetCurrentApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCurrentApp(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetCurrentApp(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDeviceModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDeviceModel() {
      ::grpc::Service::MarkMethodRawCallback(30,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDeviceModel(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDeviceModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceModel(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDeviceModel(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetControllerBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetControllerBattery() {
      ::grpc::Service::MarkMethodRawCallback(31,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetControllerBattery(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetControllerBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetControllerBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetControllerBattery(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetScreenState() {
      ::grpc::Service::MarkMethodRawCallback(32,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetScreenState(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenStateInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetScreenState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetScreenState() {
      ::grpc::Service::MarkMethodRawCallback(33,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetScreenState(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetScreenState(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CustomControllerHomeButtonFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CustomControllerHomeButtonFunction() {
      ::grpc::Service::MarkMethodRawCallback(34,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CustomControllerHomeButtonFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_CustomControllerHomeButtonFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CustomControllerHomeButtonFunction(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerHomeButtonFunction* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CustomControllerHomeButtonFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RecenterView : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RecenterView() {
      ::grpc::Service::MarkMethodRawCallback(35,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RecenterView(context, request, response); }));
    }
    ~WithRawCallbackMethod_RecenterView() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RecenterView(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RecenterView(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetDeviceAlias() {
      ::grpc::Service::MarkMethodRawCallback(36,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetDeviceAlias(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceAliasInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetDeviceAlias(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDeviceAlias() {
      ::grpc::Service::MarkMethodRawCallback(37,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDeviceAlias(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDeviceAlias(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodRawCallback(38,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeviceControlJson(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeviceControlJson(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendTexHandle : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendTexHandle() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::TexHandleInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::TexHandleInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendTexHandle(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendTexHandle() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendTexHandle(::grpc::ServerContext* /*context*/, const ::PXREAService::TexHandleInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendTexHandle(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::TexHandleInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBattery() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedGetBattery(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBattery(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartControlDevice() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStartControlDevice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartControlDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopControlDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopControlDevice() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStopControlDevice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopControlDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopControlDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopControlDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_LockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_LockDevice() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedLockDevice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_LockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status LockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLockDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnlockDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnlockDevice() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedUnlockDevice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnlockDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnlockDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnlockDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartPlayVideo() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::VideoPlayInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::VideoPlayInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStartPlayVideo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartPlayVideo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::VideoPlayInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopPlayVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopPlayVideo() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStopPlayVideo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopPlayVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopPlayVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopPlayVideo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SeekVideoTime : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SeekVideoTime() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::VideoSeekInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::VideoSeekInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSeekVideoTime(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SeekVideoTime() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SeekVideoTime(::grpc::ServerContext* /*context*/, const ::PXREAService::VideoSeekInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSeekVideoTime(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::VideoSeekInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PauseVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PauseVideo() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedPauseVideo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PauseVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PauseVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPauseVideo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ContinueVideo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ContinueVideo() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedContinueVideo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ContinueVideo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ContinueVideo(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedContinueVideo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartPlayApp() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::AppPlayInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::AppPlayInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStartPlayApp(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartPlayApp(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::AppPlayInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopPlayApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopPlayApp() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::AppPlayInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::AppPlayInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStopPlayApp(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopPlayApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopPlayApp(::grpc::ServerContext* /*context*/, const ::PXREAService::AppPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopPlayApp(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::AppPlayInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartPlayPicture() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::PicPlayInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::PicPlayInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStartPlayPicture(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::PicPlayInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartPlayPicture(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::PicPlayInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopPlayPicture : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopPlayPicture() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStopPlayPicture(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopPlayPicture() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopPlayPicture(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopPlayPicture(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetDeviceVolumn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetDeviceVolumn() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceVolumnInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceVolumnInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetDeviceVolumn(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetDeviceVolumn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetDeviceVolumn(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceVolumnInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetDeviceVolumn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceVolumnInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BackToHome : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BackToHome() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedBackToHome(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BackToHome() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BackToHome(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBackToHome(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShutDownDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ShutDownDevice() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedShutDownDevice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ShutDownDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShutDownDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShutDownDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RestartDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RestartDevice() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRestartDevice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RestartDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RestartDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRestartDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendBytesToDevice : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendBytesToDevice() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceBytesInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceBytesInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendBytesToDevice(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendBytesToDevice() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendBytesToDevice(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendBytesToDevice(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceBytesInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendBytesToRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendBytesToRoom() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::RoomBytesInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::RoomBytesInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendBytesToRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendBytesToRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendBytesToRoom(::grpc::ServerContext* /*context*/, const ::PXREAService::RoomBytesInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendBytesToRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::RoomBytesInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartMonitorScreen() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::ScreenMonitorParameter, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::ScreenMonitorParameter, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStartMonitorScreen(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartMonitorScreen(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::ScreenMonitorParameter,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetMonitorScreenQuality : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetMonitorScreenQuality() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::ScreenMonitorParameter, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::ScreenMonitorParameter, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetMonitorScreenQuality(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetMonitorScreenQuality() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetMonitorScreenQuality(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenMonitorParameter* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetMonitorScreenQuality(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::ScreenMonitorParameter,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopMonitorScreen : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopMonitorScreen() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStopMonitorScreen(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopMonitorScreen() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopMonitorScreen(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopMonitorScreen(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StartMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StartMonitorStream() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStartMonitorStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StartMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StartMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStartMonitorStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_StopMonitorStream : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_StopMonitorStream() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedStopMonitorStream(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_StopMonitorStream() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StopMonitorStream(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStopMonitorStream(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CancelServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CancelServerFeedback() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::VRPid, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::VRPid, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedCancelServerFeedback(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CancelServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CancelServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCancelServerFeedback(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::VRPid,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendBeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendBeat() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendBeat(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendBeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendBeat(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendBeat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCurrentApp : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetCurrentApp() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedGetCurrentApp(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetCurrentApp() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCurrentApp(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCurrentApp(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDeviceModel : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDeviceModel() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedGetDeviceModel(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDeviceModel() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDeviceModel(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDeviceModel(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetControllerBattery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetControllerBattery() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::ControllerInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::ControllerInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedGetControllerBattery(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetControllerBattery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetControllerBattery(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetControllerBattery(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::ControllerInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetScreenState() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::ScreenStateInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::ScreenStateInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetScreenState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::ScreenStateInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetScreenState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::ScreenStateInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetScreenState : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetScreenState() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedGetScreenState(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetScreenState() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetScreenState(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetScreenState(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CustomControllerHomeButtonFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CustomControllerHomeButtonFunction() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::ControllerHomeButtonFunction, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::ControllerHomeButtonFunction, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedCustomControllerHomeButtonFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CustomControllerHomeButtonFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CustomControllerHomeButtonFunction(::grpc::ServerContext* /*context*/, const ::PXREAService::ControllerHomeButtonFunction* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCustomControllerHomeButtonFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::ControllerHomeButtonFunction,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RecenterView : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RecenterView() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRecenterView(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RecenterView() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RecenterView(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRecenterView(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetDeviceAlias() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceAliasInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceAliasInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSetDeviceAlias(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceAliasInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetDeviceAlias(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceAliasInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDeviceAlias : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDeviceAlias() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceID, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceID, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedGetDeviceAlias(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDeviceAlias() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDeviceAlias(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceID* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDeviceAlias(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceID,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeviceControlJson : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeviceControlJson() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::internal::StreamedUnaryHandler<
          ::PXREAService::DeviceControlParameterJson, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::PXREAService::DeviceControlParameterJson, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedDeviceControlJson(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeviceControlJson() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeviceControlJson(::grpc::ServerContext* /*context*/, const ::PXREAService::DeviceControlParameterJson* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeviceControlJson(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::PXREAService::DeviceControlParameterJson,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SendTexHandle<WithStreamedUnaryMethod_GetBattery<WithStreamedUnaryMethod_StartControlDevice<WithStreamedUnaryMethod_StopControlDevice<WithStreamedUnaryMethod_LockDevice<WithStreamedUnaryMethod_UnlockDevice<WithStreamedUnaryMethod_StartPlayVideo<WithStreamedUnaryMethod_StopPlayVideo<WithStreamedUnaryMethod_SeekVideoTime<WithStreamedUnaryMethod_PauseVideo<WithStreamedUnaryMethod_ContinueVideo<WithStreamedUnaryMethod_StartPlayApp<WithStreamedUnaryMethod_StopPlayApp<WithStreamedUnaryMethod_StartPlayPicture<WithStreamedUnaryMethod_StopPlayPicture<WithStreamedUnaryMethod_SetDeviceVolumn<WithStreamedUnaryMethod_BackToHome<WithStreamedUnaryMethod_ShutDownDevice<WithStreamedUnaryMethod_RestartDevice<WithStreamedUnaryMethod_SendBytesToDevice<WithStreamedUnaryMethod_SendBytesToRoom<WithStreamedUnaryMethod_StartMonitorScreen<WithStreamedUnaryMethod_SetMonitorScreenQuality<WithStreamedUnaryMethod_StopMonitorScreen<WithStreamedUnaryMethod_StartMonitorStream<WithStreamedUnaryMethod_StopMonitorStream<WithStreamedUnaryMethod_CancelServerFeedback<WithStreamedUnaryMethod_SendBeat<WithStreamedUnaryMethod_GetCurrentApp<WithStreamedUnaryMethod_GetDeviceModel<WithStreamedUnaryMethod_GetControllerBattery<WithStreamedUnaryMethod_SetScreenState<WithStreamedUnaryMethod_GetScreenState<WithStreamedUnaryMethod_CustomControllerHomeButtonFunction<WithStreamedUnaryMethod_RecenterView<WithStreamedUnaryMethod_SetDeviceAlias<WithStreamedUnaryMethod_GetDeviceAlias<WithStreamedUnaryMethod_DeviceControlJson<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_WatchServerFeedback : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_WatchServerFeedback() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::PXREAService::VRPid, ::PXREAService::ServerFeedback>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::PXREAService::VRPid, ::PXREAService::ServerFeedback>* streamer) {
                       return this->StreamedWatchServerFeedback(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_WatchServerFeedback() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WatchServerFeedback(::grpc::ServerContext* /*context*/, const ::PXREAService::VRPid* /*request*/, ::grpc::ServerWriter< ::PXREAService::ServerFeedback>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedWatchServerFeedback(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::PXREAService::VRPid,::PXREAService::ServerFeedback>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_WatchServerFeedback<Service > SplitStreamedService;
  typedef WithStreamedUnaryMethod_SendTexHandle<WithStreamedUnaryMethod_GetBattery<WithStreamedUnaryMethod_StartControlDevice<WithStreamedUnaryMethod_StopControlDevice<WithStreamedUnaryMethod_LockDevice<WithStreamedUnaryMethod_UnlockDevice<WithStreamedUnaryMethod_StartPlayVideo<WithStreamedUnaryMethod_StopPlayVideo<WithStreamedUnaryMethod_SeekVideoTime<WithStreamedUnaryMethod_PauseVideo<WithStreamedUnaryMethod_ContinueVideo<WithStreamedUnaryMethod_StartPlayApp<WithStreamedUnaryMethod_StopPlayApp<WithStreamedUnaryMethod_StartPlayPicture<WithStreamedUnaryMethod_StopPlayPicture<WithStreamedUnaryMethod_SetDeviceVolumn<WithStreamedUnaryMethod_BackToHome<WithStreamedUnaryMethod_ShutDownDevice<WithStreamedUnaryMethod_RestartDevice<WithStreamedUnaryMethod_SendBytesToDevice<WithStreamedUnaryMethod_SendBytesToRoom<WithStreamedUnaryMethod_StartMonitorScreen<WithStreamedUnaryMethod_SetMonitorScreenQuality<WithStreamedUnaryMethod_StopMonitorScreen<WithStreamedUnaryMethod_StartMonitorStream<WithStreamedUnaryMethod_StopMonitorStream<WithSplitStreamingMethod_WatchServerFeedback<WithStreamedUnaryMethod_CancelServerFeedback<WithStreamedUnaryMethod_SendBeat<WithStreamedUnaryMethod_GetCurrentApp<WithStreamedUnaryMethod_GetDeviceModel<WithStreamedUnaryMethod_GetControllerBattery<WithStreamedUnaryMethod_SetScreenState<WithStreamedUnaryMethod_GetScreenState<WithStreamedUnaryMethod_CustomControllerHomeButtonFunction<WithStreamedUnaryMethod_RecenterView<WithStreamedUnaryMethod_SetDeviceAlias<WithStreamedUnaryMethod_GetDeviceAlias<WithStreamedUnaryMethod_DeviceControlJson<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace PXREAService


#endif  // GRPC_PXREAService_2eproto__INCLUDED
